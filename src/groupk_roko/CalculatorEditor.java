/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package groupk_roko;

/**
 *
 * @author rokom
 */
public class CalculatorEditor extends javax.swing.JFrame {

    /**
     * Creates new form CalculatorEditor
     */
    private CalculatorMenu calcMenu;
    // currentOperation = whether a new record is being added or if 
    // an existing record is being modified
    private String currentOperation;
    private Subsidy tempSubsidy;
    private Campaign tempCampaign;
    private Programme tempProgramme;
    
    public CalculatorEditor() {
        initComponents();
    }
    
    public void setCalculatorMenu(CalculatorMenu menu){
        calcMenu = menu;
    }
    
    public void setCurrentOperation(String operation) {
        currentOperation = operation;
    }
    
    public String getCurrentOperation() {
        return currentOperation;
    }
    
    // methods to return components
    public javax.swing.JLabel getDerived1LBL() {
        return derived1LBL;
    }
    
    public javax.swing.JLabel getDerived2LBL() {
        return derived2LBL;
    }
    
    public javax.swing.JTextField getIdTF() {
        return idTF;
    }
    
    public javax.swing.JTextField getNameTF() {
        return nameTF;
    }
    
    public javax.swing.JTextField getDateTF() {
        return dateTF;
    }
    
    public javax.swing.JTextField getGoalTF() {
        return goalTF;
    }
    
    public javax.swing.JTextField getAmountTF() {
        return amountTF;
    }
    
    public javax.swing.JTextField getDerived1TF() {
        return derived1TF;
    }
    
    public javax.swing.JTextField getDerived2TF() {
        return derived2TF;
    }
    
    public void clearTextFields() {
        nameTF.setText("");
        dateTF.setText("");
        goalTF.setText("");
        amountTF.setText("");
        derived1TF.setText("");
        derived2TF.setText("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        backBTN = new javax.swing.JButton();
        idLBL = new javax.swing.JLabel();
        nameLBL = new javax.swing.JLabel();
        dateLBL = new javax.swing.JLabel();
        goalLBL = new javax.swing.JLabel();
        amountLBL = new javax.swing.JLabel();
        derived1LBL = new javax.swing.JLabel();
        derived2LBL = new javax.swing.JLabel();
        idTF = new javax.swing.JTextField();
        nameTF = new javax.swing.JTextField();
        dateTF = new javax.swing.JTextField();
        goalTF = new javax.swing.JTextField();
        amountTF = new javax.swing.JTextField();
        derived1TF = new javax.swing.JTextField();
        derived2TF = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputTA = new javax.swing.JTextArea();
        submitBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        backBTN.setText("Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        idLBL.setText("ID");

        nameLBL.setText("Name");

        dateLBL.setText("Date");

        goalLBL.setText("Goal");

        amountLBL.setText("Amount");

        derived1LBL.setText("X");

        derived2LBL.setText("Y");

        idTF.setEditable(false);

        outputTA.setEditable(false);
        outputTA.setColumns(20);
        outputTA.setLineWrap(true);
        outputTA.setRows(5);
        outputTA.setWrapStyleWord(true);
        jScrollPane1.setViewportView(outputTA);

        submitBTN.setText("Submit");
        submitBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(backBTN)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(submitBTN))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(goalLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(amountLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(dateLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(derived1LBL, javax.swing.GroupLayout.DEFAULT_SIZE, 79, Short.MAX_VALUE)
                                    .addComponent(derived2LBL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(dateTF, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(goalTF, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 115, Short.MAX_VALUE)
                                        .addComponent(derived2TF, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(amountTF, javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(derived1TF, javax.swing.GroupLayout.Alignment.TRAILING)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(nameLBL)
                                    .addComponent(idLBL, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(60, 60, 60)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(idTF)
                                    .addComponent(nameTF))
                                .addGap(38, 38, 38)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(22, 22, 22))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(idLBL)
                            .addComponent(idTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(21, 21, 21)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nameLBL)
                            .addComponent(nameTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(dateLBL)
                            .addComponent(dateTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(goalLBL)
                            .addComponent(goalTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jScrollPane1))
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(amountLBL)
                    .addComponent(amountTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(derived1LBL)
                    .addComponent(derived1TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(derived2LBL)
                    .addComponent(derived2TF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(backBTN)
                    .addComponent(submitBTN))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        if (!calcMenu.getCalcList().isEmpty()) {
            calcMenu.getDisplayTA().setText(calcMenu.getCalcList().getLast().printDetails());     
            calcMenu.setNavigatorIndex(calcMenu.getCalcList().size() - 1);
            System.out.println("NavIndex: " + calcMenu.getNavigatorIndex());
            calcMenu.getCountLBL().setText(calcMenu.getNavigatorIndex() + 1 + " / " + 
                    calcMenu.getCalcList().size());
        }
        calcMenu.setVisible(true);
        // check if record navigator should be enabled
        if (calcMenu.getCalcList().size() == 1) { // just one needed to enable editing
            calcMenu.getEditBTN().setEnabled(true);
            calcMenu.getDeleteBTN().setEnabled(true);
            calcMenu.getSaveBTN().setEnabled(true);
        }
        else if (calcMenu.getCalcList().size() > 1) { // more than one 
            calcMenu.getEditBTN().setEnabled(true);
            calcMenu.getDeleteBTN().setEnabled(true);
            //calcMenu.getSaveBTN().setEnabled(true);
            calcMenu.getPreviousBTN().setEnabled(true);
            calcMenu.getNextBTN().setEnabled(true);
        }
        // enable or disable save button if additions have been made
        if (calcMenu.getFileObjectCount() != calcMenu.getCalcList().size()
            && calcMenu.getLoadPerformed()) {
            calcMenu.getSaveBTN().setEnabled(true);
        }
        
        // clear the text fields
        clearTextFields();      
    }//GEN-LAST:event_backBTNActionPerformed

    private void submitBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitBTNActionPerformed
        // TODO add your handling code here:
        if (currentOperation.equals("add")) {
            if (nameTF.getText().isEmpty() || dateTF.getText().isEmpty()
                || goalTF.getText().isEmpty() || amountTF.getText().isEmpty()
                || derived1TF.getText().isEmpty() || derived2TF.getText().isEmpty())
            {
                outputTA.setText("One or more text fields have not been populated. Cannot submit.");
            }
            else {
                // check which radio button is selected
                if (calcMenu.getSubsidyRB().isSelected()) {
                    tempSubsidy = new Subsidy(nameTF.getText(), dateTF.getText(),
                    goalTF.getText(), Double.parseDouble(amountTF.getText()), derived1TF.getText(),
                    Boolean.parseBoolean(derived2TF.getText()));
                    calcMenu.getCalcList().add(tempSubsidy);
                    outputTA.setText("Subsidy " + tempSubsidy.getName() + " has been submitted.");
                    clearTextFields();
                    idTF.setText(String.valueOf(tempSubsidy.getCurrentId()));
                    calcMenu.getDisplayTA().setText(tempSubsidy.printDetails());
                }
                else if (calcMenu.getCampaignRB().isSelected()) {
                    tempCampaign = new Campaign(nameTF.getText(), dateTF.getText(),
                    goalTF.getText(), Double.parseDouble(amountTF.getText()), derived1TF.getText(),
                    derived2TF.getText());
                    calcMenu.getCalcList().add(tempCampaign);
                    outputTA.setText("Campaign " + tempCampaign.getName() + " has been submitted.");
                    clearTextFields();
                    idTF.setText(String.valueOf(tempCampaign.getCurrentId()));
                    calcMenu.getDisplayTA().setText(tempCampaign.printDetails());
                }
                else {
                    tempProgramme = new Programme(nameTF.getText(), dateTF.getText(),
                    goalTF.getText(), Double.parseDouble(amountTF.getText()), derived1TF.getText(),
                    Boolean.parseBoolean(derived2TF.getText()));
                    calcMenu.getCalcList().add(tempProgramme);
                    outputTA.setText("Programme " + tempProgramme.getName() + " has been submitted.");
                    clearTextFields();
                    idTF.setText(String.valueOf(tempProgramme.getCurrentId()));
                    calcMenu.getDisplayTA().setText(tempProgramme.printDetails());
                }
                calcMenu.setNavigatorIndex(calcMenu.getNavigatorIndex() + 1);
            }          
        }
        else if (currentOperation.equals("edit")) {
            String name, date, goal, beneficiary, manager, endDate, department;
            double amount;
            boolean isLumpSum, isRecurrent;
            name = calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()).getName();
            date = calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()).getDate();
            goal = calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()).getGoal();
            amount = calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()).getAmount();
            calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()).setName(nameTF.getText());
            calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()).setDate(dateTF.getText());
            calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()).setGoal(goalTF.getText());
            calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()).setAmount(Double.parseDouble(amountTF.getText()));
            if (calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()) instanceof Subsidy) {
                beneficiary = ((Subsidy)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).getBeneficiary();
                ((Subsidy)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).setBeneficiary(derived1TF.getText());
                isLumpSum = ((Subsidy)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).isIsLumpSum();
                ((Subsidy)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).setIsLumpSum(Boolean.parseBoolean(derived2TF.getText()));
                if (!beneficiary.equals(((Subsidy)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).getBeneficiary())
                        || isLumpSum != ((Subsidy)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).isIsLumpSum())
                    calcMenu.getSaveBTN().setEnabled(true);
                
            }
            else if (calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()) instanceof Campaign) {
                manager = ((Campaign)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).getManager();
                ((Campaign)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).setManager(derived1TF.getText());
                endDate = ((Campaign)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).getEndDate();
                ((Campaign)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).setEndDate(derived2TF.getText());
                if (!manager.equals(((Campaign)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).getManager()) 
                        || !endDate.equals(((Campaign)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).getEndDate()))
                    calcMenu.getSaveBTN().setEnabled(true);
            }
            else if (calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()) instanceof Programme) {
                department = ((Programme)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).getDepartment();
                ((Programme)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).setDepartment(derived1TF.getText());
                isRecurrent = ((Programme)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).isIsRecurrent();
                ((Programme)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).setIsRecurrent(Boolean.parseBoolean(derived2TF.getText()));
                if (!department.equals(((Programme)calcMenu.getCalcList().get(calcMenu.getNavigatorIndex())).getDepartment()))
                    calcMenu.getSaveBTN().setEnabled(true);
            }
            outputTA.setText("");
            calcMenu.getDisplayTA().setText(calcMenu.getCalcList().get(calcMenu.getNavigatorIndex()).printDetails());
            this.setVisible(false);
            calcMenu.setVisible(true);
            // enable save button if changes are made
            if (!name.equals(nameTF.getText()) || !date.equals(dateTF.getText()) || !goal.equals(goalTF.getText())
                    || amount != Double.parseDouble(amountTF.getText()))
                calcMenu.getSaveBTN().setEnabled(true);
        }
    }//GEN-LAST:event_submitBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CalculatorEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CalculatorEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CalculatorEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CalculatorEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CalculatorEditor().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel amountLBL;
    private javax.swing.JTextField amountTF;
    private javax.swing.JButton backBTN;
    private javax.swing.JLabel dateLBL;
    private javax.swing.JTextField dateTF;
    private javax.swing.JLabel derived1LBL;
    private javax.swing.JTextField derived1TF;
    private javax.swing.JLabel derived2LBL;
    private javax.swing.JTextField derived2TF;
    private javax.swing.JLabel goalLBL;
    private javax.swing.JTextField goalTF;
    private javax.swing.JLabel idLBL;
    private javax.swing.JTextField idTF;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel nameLBL;
    private javax.swing.JTextField nameTF;
    private javax.swing.JTextArea outputTA;
    private javax.swing.JButton submitBTN;
    // End of variables declaration//GEN-END:variables
}
